{"ast":null,"code":"import{useState,useEffect}from\"react\";import{MemoizedTodoBox}from\"./TodoBox\";import styles from\"../css/Todo.module.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Todo(){// useState\nconst[input,setInput]=useState(\"\");const[todoList,setTodoList]=useState(()=>{const storedTodos=localStorage.getItem(\"todoList\");// storedTodos가 배열인지 확인하고, 아니면 빈 배열로 설정\nreturn storedTodos?JSON.parse(storedTodos):[];});// 입력 필드 변화 처리\nconst onInputChange=e=>{setInput(e.target.value);};// 새로운 TODO 항목 추가\nconst makeTodoBox=()=>{if(input.trim()!==\"\"){// todoList가 배열인지 확인하고 배열로 처리\nif(!Array.isArray(todoList)){console.error(\"todoList is not an array. Resetting to empty array.\");setTodoList([]);return;}const newTodoList=[...todoList,{id:Date.now(),content:input,checked:false}// 새 항목은 기본적으로 unchecked\n];setTodoList(newTodoList);// 상태 업데이트\nsetInput(\"\");// 입력 필드 초기화\n}};// 체크박스 상태 변경\nconst changeCheckBox=id=>{if(!Array.isArray(todoList))return;// 배열이 아니면 실행하지 않음\nconst updatedTodoList=todoList.map(todo=>todo.id===id?{...todo,checked:!todo.checked}:todo);setTodoList(updatedTodoList);// 상태 업데이트\n};// TODO 항목 삭제\nconst deleteTodoList=id=>{if(!Array.isArray(todoList))return;// 배열이 아니면 실행하지 않음\nconst updatedTodoList=todoList.filter(todo=>todo.id!==id);setTodoList(updatedTodoList);// 상태 업데이트\n};// 로컬스토리지에 데이터 저장\nuseEffect(()=>{if(Array.isArray(todoList)){localStorage.setItem(\"todoList\",JSON.stringify(todoList));}},[todoList]);return/*#__PURE__*/_jsxs(\"div\",{className:styles.app,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.title,children:\"Todo list\"}),/*#__PURE__*/_jsxs(\"div\",{id:\"todo-input-wrapper\",style:{display:\"row\"},children:[/*#__PURE__*/_jsx(\"input\",{value:input,onChange:onInputChange,className:styles.inputWrapper,onKeyDown:e=>{if(e.nativeEvent.isComposing){return;}if(e.key===\"Enter\"){makeTodoBox();}},placeholder:\"Write down your new TODOs! :)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:makeTodoBox,className:styles.postButton,children:\"post\"})]}),todoList.length>0&&// todoList가 비어있지 않을 때만 map 실행\ntodoList.map(todo=>/*#__PURE__*/_jsx(MemoizedTodoBox,{// 고유식별번호(꼭 넣어줘야함!!)\nid:todo.id// id 전달\n,value:todo.content,checked:todo.checked// checked 상태 전달\n,changeCheckBox:changeCheckBox// 함수 전달\n,deleteTodoList:deleteTodoList// 함수 전달\n},todo.id))]});}export default Todo;","map":{"version":3,"names":["useState","useEffect","MemoizedTodoBox","styles","jsx","_jsx","jsxs","_jsxs","Todo","input","setInput","todoList","setTodoList","storedTodos","localStorage","getItem","JSON","parse","onInputChange","e","target","value","makeTodoBox","trim","Array","isArray","console","error","newTodoList","id","Date","now","content","checked","changeCheckBox","updatedTodoList","map","todo","deleteTodoList","filter","setItem","stringify","className","app","children","title","style","display","onChange","inputWrapper","onKeyDown","nativeEvent","isComposing","key","placeholder","onClick","postButton","length"],"sources":["/Users/nimo/Desktop/frontend-pactice/src/routes/Todo.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { MemoizedTodoBox } from \"./TodoBox\";\nimport styles from \"../css/Todo.module.css\";\n\nfunction Todo() {\n\t// useState\n\tconst [input, setInput] = useState(\"\");\n\tconst [todoList, setTodoList] = useState(() => {\n\t\tconst storedTodos = localStorage.getItem(\"todoList\");\n\t\t// storedTodos가 배열인지 확인하고, 아니면 빈 배열로 설정\n\t\treturn storedTodos ? JSON.parse(storedTodos) : [];\n\t});\n\n\t// 입력 필드 변화 처리\n\tconst onInputChange = (e) => {\n\t\tsetInput(e.target.value);\n\t};\n\n\t// 새로운 TODO 항목 추가\n\tconst makeTodoBox = () => {\n\t\tif (input.trim() !== \"\") {\n\t\t\t// todoList가 배열인지 확인하고 배열로 처리\n\t\t\tif (!Array.isArray(todoList)) {\n\t\t\t\tconsole.error(\"todoList is not an array. Resetting to empty array.\");\n\t\t\t\tsetTodoList([]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst newTodoList = [\n\t\t\t\t...todoList,\n\t\t\t\t{ id: Date.now(), content: input, checked: false }, // 새 항목은 기본적으로 unchecked\n\t\t\t];\n\t\t\tsetTodoList(newTodoList); // 상태 업데이트\n\t\t\tsetInput(\"\"); // 입력 필드 초기화\n\t\t}\n\t};\n\n\t// 체크박스 상태 변경\n\tconst changeCheckBox = (id) => {\n\t\tif (!Array.isArray(todoList)) return; // 배열이 아니면 실행하지 않음\n\n\t\tconst updatedTodoList = todoList.map((todo) =>\n\t\t\ttodo.id === id ? { ...todo, checked: !todo.checked } : todo\n\t\t);\n\t\tsetTodoList(updatedTodoList); // 상태 업데이트\n\t};\n\n\t// TODO 항목 삭제\n\tconst deleteTodoList = (id) => {\n\t\tif (!Array.isArray(todoList)) return; // 배열이 아니면 실행하지 않음\n\n\t\tconst updatedTodoList = todoList.filter((todo) => todo.id !== id);\n\t\tsetTodoList(updatedTodoList); // 상태 업데이트\n\t};\n\n\t// 로컬스토리지에 데이터 저장\n\tuseEffect(() => {\n\t\tif (Array.isArray(todoList)) {\n\t\t\tlocalStorage.setItem(\"todoList\", JSON.stringify(todoList));\n\t\t}\n\t}, [todoList]);\n\n\treturn (\n\t\t<div className={styles.app}>\n\t\t\t<div className={styles.title}>Todo list</div>\n\t\t\t<div\n\t\t\t\tid=\"todo-input-wrapper\"\n\t\t\t\tstyle={{ display: \"row\" }}>\n\t\t\t\t<input\n\t\t\t\t\tvalue={input}\n\t\t\t\t\tonChange={onInputChange}\n\t\t\t\t\tclassName={styles.inputWrapper}\n\t\t\t\t\tonKeyDown={(e) => {\n\t\t\t\t\t\tif (e.nativeEvent.isComposing) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\t\tmakeTodoBox();\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t\tplaceholder=\"Write down your new TODOs! :)\"\n\t\t\t\t/>\n\t\t\t\t<button\n\t\t\t\t\tonClick={makeTodoBox}\n\t\t\t\t\tclassName={styles.postButton}>\n\t\t\t\t\tpost\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t{todoList.length > 0 && // todoList가 비어있지 않을 때만 map 실행\n\t\t\t\ttodoList.map((todo) => (\n\t\t\t\t\t<MemoizedTodoBox\n\t\t\t\t\t\tkey={todo.id} // 고유식별번호(꼭 넣어줘야함!!)\n\t\t\t\t\t\tid={todo.id} // id 전달\n\t\t\t\t\t\tvalue={todo.content}\n\t\t\t\t\t\tchecked={todo.checked} // checked 상태 전달\n\t\t\t\t\t\tchangeCheckBox={changeCheckBox} // 함수 전달\n\t\t\t\t\t\tdeleteTodoList={deleteTodoList} // 함수 전달\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default Todo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}